import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Random;

public class SignInPage extends JFrame {
    private JTextField usernameField;
    private JPasswordField passwordField;
    private JButton signInButton;

    public SignInPage() {
        setTitle("Sign In");
        setSize(300, 200);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setLayout(new GridBagLayout());

        // Create components
        JLabel usernameLabel = new JLabel("Username:");
        usernameLabel.setFont(new Font("Sans-serif", Font.BOLD, 17)); // Set font
        usernameField = new JTextField(15);
        
        JLabel passwordLabel = new JLabel("Password:");
        passwordLabel.setFont(new Font("Sans-serif", Font.BOLD, 17)); // Set font
        passwordField = new JPasswordField(15);
        
        signInButton = new JButton("Sign In");
        signInButton.setFont(new Font("Sans-serif", Font.BOLD, 17)); // Set font

        // Action listener for sign-in button
        signInButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Here you can add authentication logic
                // For now, we will just open the Movie Genie page
                new MovieG();
                dispose(); // Close sign-in page
            }
        });

        // Layout constraints for components
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(10, 10, 10, 10); // Add padding

        // Add components to the frame
        gbc.gridx = 0; gbc.gridy = 0; gbc.anchor = GridBagConstraints.WEST;
        add(usernameLabel, gbc);
        
        gbc.gridx = 1; gbc.gridy = 0;
        add(usernameField, gbc);

        gbc.gridx = 0; gbc.gridy = 1; 
        add(passwordLabel, gbc);
        
        gbc.gridx = 1; gbc.gridy = 1;
        add(passwordField, gbc);

        gbc.gridx = 0; gbc.gridy = 2; gbc.gridwidth = 2; 
        add(signInButton, gbc);
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new SignInPage().setVisible(true));
    }
}

class MovieG extends JFrame {
    private JButton randomButton;
    private JLabel searchLabel;
    private JPanel logoPanel;
    private boolean isDarkMode = true; // Default to dark mode

    private String[] genres = {"Romance", "Action", "Horror", "Comedy", "Drama", "Thriller", "Mystery", "Science Fiction", "Documentary", "Western", "War", "Indie"};
    private String[][] moviesByGenre = {
        {"Titanic", "The Notebook"},
        {"The Avengers", "Mad Max: Fury Road"},
        {"The Shining", "Get Out"},
        {"The Hangover", "Superbad"},
        {"The Shawshank Redemption", "Forrest Gump"},
        {"Se7en", "Gone Girl"},
        {"Knives Out", "Shutter Island"},
        {"Inception", "Interstellar"},
        {"13th", "Won't You Be My Neighbor?"},
        {"True Grit", "Django Unchained"},
        {"Saving Private Ryan", "Full Metal Jacket"},
        {"Lady Bird", "Moonlight"}
    };

    public MovieG() {
        setTitle("Movie Genie");
        setSize(800, 600); // Set a widescreen size
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setLayout(new BorderLayout());

        // Welcome message
        JLabel welcomeLabel = new JLabel("Welcome to Movie Genie!", SwingConstants.CENTER);
        welcomeLabel.setForeground(Color.WHITE);
        welcomeLabel.setFont(new Font("Sans-serif", Font.BOLD, 24)); // Set font
        add(welcomeLabel, BorderLayout.NORTH);

        // Create a panel for movie logos
        logoPanel = new JPanel();
        logoPanel.setLayout(new GridLayout(4, 3, 10, 10)); // 3 columns, with spacing

        // Add movie logo squares (JPanels) with genres
        for (int i = 0; i < genres.length; i++) {
            JPanel logoSquare = createLogoSquare(genres[i]);
            logoPanel.add(logoSquare);
        }

        // Add the logo panel to the center of the frame
        add(logoPanel, BorderLayout.CENTER);

        // Create button for random movie selection
        randomButton = createStyledButton("Choose Movie");
        randomButton.setToolTipText("Click to choose a random movie based on the selected genre");

        // Label for displaying results
        searchLabel = new JLabel();
        searchLabel.setForeground(Color.WHITE);
        searchLabel.setHorizontalAlignment(SwingConstants.CENTER);
        searchLabel.setFont(new Font("Sans-serif", Font.BOLD, 17)); // Set font
        searchLabel.setPreferredSize(new Dimension(300, 40));

        // Action listener for the random movie button
        randomButton.addActionListener(e -> {
            int genreIndex = (int) (Math.random() * genres.length); // Randomly select a genre index
            String movie = getRandomElement(moviesByGenre[genreIndex]);
            searchLabel.setText("Your movie is: " + movie);
        });

        // Create a panel for the bottom controls
        JPanel controlPanel = new JPanel();
        controlPanel.setLayout(new FlowLayout());
        controlPanel.add(randomButton);
        controlPanel.add(searchLabel);

        // Add control panel to the bottom of the frame
        add(controlPanel, BorderLayout.SOUTH);

        // Menu bar
        JMenuBar menuBar = new JMenuBar();
        JMenu fileMenu = new JMenu("File");
        JMenuItem exitItem = new JMenuItem("Exit");
        exitItem.addActionListener(e -> System.exit(0));
        fileMenu.add(exitItem);

        JMenu settingsMenu = new JMenu("Settings");
        JMenuItem toggleThemeItem = new JMenuItem("Toggle Light/Dark Mode");
        toggleThemeItem.addActionListener(e -> {
            isDarkMode = !isDarkMode; // Toggle the mode
            updateTheme(); // Update the theme
        });
        settingsMenu.add(toggleThemeItem);
        menuBar.add(fileMenu);
        menuBar.add(settingsMenu);
        setJMenuBar(menuBar);

        // Set the background color of the frame after all components are initialized
        updateTheme();

        setVisible(true); // Make the Movie Genie frame visible
    }

    private void updateTheme() {
        if (isDarkMode) {
            getContentPane().setBackground(new Color(10, 10, 30));
            searchLabel.setForeground(Color.BLACK);
        } else {
            getContentPane().setBackground(Color.BLACK);
            searchLabel.setForeground(Color.BLACK);
        }
        logoPanel.repaint(); // Refresh the logo panel
    }

    private JPanel createLogoSquare(String genre) {
        JPanel logoSquare = new JPanel();
        logoSquare.setPreferredSize(new Dimension(100, 100)); // Size of the logo square
        logoSquare.setBorder(BorderFactory.createLineBorder(Color.WHITE)); // Border for visibility

        // Set background color based on genre
        switch (genre) {
            case "Romance":
                logoSquare.setBackground(Color.RED);
                break;
            case "Action":
                logoSquare.setBackground(Color.BLUE);
                break;
            case "Horror":
                logoSquare.setBackground(Color.BLACK);
                break;
            case "Comedy":
                logoSquare.setBackground(Color.PINK);
                break;
            case "Drama":
                logoSquare.setBackground(new Color(128, 0, 128)); // Purple
                break;
            case "Thriller":
                logoSquare.setBackground(new Color(165, 42, 42)); // Brown
                break;
            case "Mystery":
                logoSquare.setBackground(Color.ORANGE);
                break;
            case "Science Fiction":
                logoSquare.setBackground(new Color(128, 0, 0)); // Maroon
                break;
            case "Documentary":
                logoSquare.setBackground(Color.GREEN);
                break;
            case "Western":
                logoSquare.setBackground(new Color(0, 128, 128)); // Teal
                break;
            case "War":
                logoSquare.setBackground(new Color(255, 215, 0)); // Golden
                break;
            case "Indie":
                logoSquare.setBackground(new Color(75, 0, 130)); // Indigo
                break;
        }

        // Add mouse listener to handle clicks
        logoSquare.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int genreIndex = java.util.Arrays.asList(genres).indexOf(genre);
                String movie = getRandomElement(moviesByGenre[genreIndex]);
                searchLabel.setText("Your movie is: " + movie);
            }
        });

        // Add genre label to the square
        JLabel genreLabel = new JLabel(genre, SwingConstants.CENTER);
        genreLabel.setForeground(Color.WHITE);
        genreLabel.setFont(new Font("Sans-serif", Font.BOLD, 14)); // Set font for genre label
        logoSquare.add(genreLabel);

        return logoSquare;
    }

    private JButton createStyledButton(String text) {
        JButton button = new JButton(text) {
            @Override
            protected void paintComponent(Graphics g) {
                if (getModel().isPressed()) {
                    g.setColor(new Color(50, 50, 150)); // Darker color when pressed
                } else if (getModel().isRollover()) {
                    g.setColor(new Color(70, 70, 200)); // Lighter color on hover
                } else {
                    g.setColor(isDarkMode ? new Color(100, 100, 255) : new Color(200, 200, 255)); // Default color
                }
                g.fillRoundRect(0, 0, getWidth(), getHeight(), 15, 15); // Rounded corners
                super.paintComponent(g);
            }
        };
        button.setForeground(Color.WHITE);
        button.setFont(new Font("Sans-serif", Font.BOLD, 17)); // Set font
        button.setBorder(BorderFactory.createLineBorder(Color.WHITE));
        button.setFocusPainted(false);
        button.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        button.setPreferredSize(new Dimension(140, 40));
        return button;
    }

    private String getRandomElement(String[] array) {
        Random random = new Random();
        return array[random.nextInt(array.length)];
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new MovieG().setVisible(true));
    }
}
