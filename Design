import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Random;


 class SignInPage extends JFrame {
    private JTextField usernameField;
    private JPasswordField passwordField;
    private JButton signInButton;

    public SignInPage() {
        setTitle("Sign In");
        setSize(300, 200);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setLayout(new GridBagLayout());

        // Create components
        JLabel usernameLabel = new JLabel("Username:");
        usernameLabel.setFont(new Font("Sans-serif", Font.BOLD, 17)); // Set font
        usernameField = new JTextField(15);
        
        JLabel passwordLabel = new JLabel("Password:");
        passwordLabel.setFont(new Font("Sans-serif", Font.BOLD, 17)); // Set font
        passwordField = new JPasswordField(15);
        
        signInButton = new JButton("Sign In");
        signInButton.setFont(new Font("Sans-serif", Font.BOLD, 17)); // Set font

        // Action listener for sign-in button
        signInButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Here you can add authentication logic
                // For now, we will just open the Movie Genie page
                new MovieG();
                dispose(); // Close sign-in page
            }
        });

        // Layout constraints for components
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(10, 10, 10, 10); // Add padding

        // Add components to the frame
        gbc.gridx = 0; gbc.gridy = 0; gbc.anchor = GridBagConstraints.WEST;
        add(usernameLabel, gbc);
        
        gbc.gridx = 1; gbc.gridy = 0;
        add(usernameField, gbc);

        gbc.gridx = 0; gbc.gridy = 1; 
        add(passwordLabel, gbc);
        
        gbc.gridx = 1; gbc.gridy = 1;
        add(passwordField, gbc);

        gbc.gridx = 0; gbc.gridy = 2; gbc.gridwidth = 2; 
        add(signInButton, gbc);
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new SignInPage().setVisible(true));
    }
}

class MovieG extends JFrame {
    private JButton randomButton;
    private JLabel searchLabel;
    private JPanel logoPanel;
    private boolean isDarkMode = true; // Default to dark mode

    
    private String[] genres = {"Romance", "Action", "Horror", "Comedy", "Drama", "Thriller", "Mystery", "Science Fiction", "Documentary", "Western", "War", "Indie"};
    private String[][] moviesByGenre = {
   // Romance
   {"Titanic", "The Notebook", "Pride and Prejudice", "The Fault in Our Stars", "La La Land", 
   "A Walk to Remember", "The Vow", "Crazy, Stupid, Love", "10 Things I Hate About You", 
   "Notting Hill", "The Proposal", "Me Before You", "The Time Traveler's Wife", "Love Actually", 
   "The Best of Me", "To All the Boys I've Loved Before", "The Lucky One", "The Last Song", 
   "The Age of Adaline", "The Choice"},
  
  // Action
  {"The Avengers", "Mad Max: Fury Road", "Die Hard", "John Wick", "Gladiator", 
   "The Dark Knight", "Inception", "The Matrix", "Jurassic Park", "Terminator 2: Judgment Day", 
   "Mission: Impossible - Fallout", "Black Panther", "Spider-Man: Homecoming", "Guardians of the Galaxy", 
   "Furious 7", "Django Unchained", "Casino Royale", "The Bourne Identity", "Kill Bill: Vol. 1", 
   "The Equalizer"},
  
  // Horror
  {"The Shining", "Get Out", "A Nightmare on Elm Street", "The Exorcist", "It", 
   "Hereditary", "The Conjuring", "The Babadook", "Halloween", "The Ring", 
   "Sinister", "Paranormal Activity", "The Witch", "Midsommar", "Us", 
   "Scream", "The Texas Chain Saw Massacre", "It Follows", "The Grudge", 
   "The Cabin in the Woods", "The Invisible Man"},
  
  // Comedy
  {"The Hangover", "Superbad", "Step Brothers", "Bridesmaids", "Mean Girls", 
   "Groundhog Day", "The 40-Year-Old Virgin", "Zoolander", "Dumb and Dumber", 
   "Anchorman: The Legend of Ron Burgundy", "Ferris Bueller's Day Off", "Ghostbusters", 
   "Shaun of the Dead", "Tropic Thunder", "Pitch Perfect", "21 Jump Street", 
   "Crazy Rich Asians", "The Other Guys", "Hot Fuzz", "The Nice Guys"},
  
  // Drama
  {"The Shawshank Redemption", "Forrest Gump", "Fight Club", "The Godfather", "12 Years a Slave", 
   "The Social Network", "The Pursuit of Happyness", "A Beautiful Mind", "Good Will Hunting", 
   "Schindler's List", "The Green Mile", "The Departed", "The Revenant", "Moonlight", 
   "The King's Speech", "The Imitation Game", "The Help", "The Great Gatsby", "The Fault in Our Stars", 
   "Little Women"},
  
  // Thriller
  {"Se7en", "Gone Girl", "Prisoners", "Zodiac", "The Girl with the Dragon Tattoo", 
   "Shutter Island", "The Sixth Sense", "Fight Club", "Memento", "No Country for Old Men", 
   "The Silence of the Lambs", "Psycho", "The Usual Suspects", "Oldboy", "The Prestige", 
   "The Others", "Cape Fear", "The Machinist", "The Game", "The Invisible Man"},
  
  // Mystery
  {"Knives Out", "Shutter Island", "Gone Girl", "The Girl with the Dragon Tattoo", "Murder on the Orient Express", 
   "The Sixth Sense", "Prisoners", "Zodiac", "The Usual Suspects", "The Prestige", 
   "The Others", "Oldboy", "The Secret in Their Eyes", "The Invisible Man", "The Gift", 
   "The Night Of", "The Killing", "The Sinner", "Broadchurch","True Detective"},
  
  // Science Fiction
  {"Inception", "Interstellar", "Blade Runner 2049", "The Matrix", "Arrival", 
   "Ex Machina", "Eternal Sunshine of the Spotless Mind", "District 9", "The Fifth Element", 
   "Star Wars: A New Hope", "The Terminator", "Back to the Future", "Gravity", 
   "Minority Report", "Children of Men", "The Martian", "Her", "Annihilation", 
   "Ready Player One", "Dune"},
  
  // Documentary
  {"13th", "Won't You Be My Neighbor?", "Jiro Dreams of Sushi", "Blackfish", "The Act of Killing", 
   "The Fog of War", "Won't You Be My Neighbor?", "Searching for Sugar Man", "Inside Job", 
   "My Octopus Teacher", "Free Solo", "The Social Dilemma", "American Factory", 
   "The Last Dance", "Exit Through the Gift Shop", "The Keepers", "Making a Murderer", 
   "The Inventor: Out for Blood in Silicon Valley", "The Great Hack", "The Cove"},
  
  // Western
  {"True Grit", "Django Unchained", "The Good, the Bad and the Ugly", "Unforgiven", "The Magnificent Seven", 
   "No Country for Old Men", "The Hateful Eight", "Tombstone", "The Revenant", "Silverado", 
   "The Assassination of Jesse James by the Coward Robert Ford", "3:10 to Yuma", "The Outlaw Josey Wales", 
   "Butch Cassidy and the Sundance Kid", "The Searchers", "High Noon", "Once Upon a Time in the West", 
   "The Ballad of Buster Scruggs", "The Sisters Brothers", "Hell or High Water"},
  
  // War
  {"Saving Private Ryan", "Full Metal Jacket", "Apocalypse Now", "Platoon", "1917", 
   "Dunkirk", "Black Hawk Down", "The Thin Red Line", "American Sniper", "Hacksaw Ridge", 
   "The Hurt Locker", "We Were Soldiers", "Letters from Iwo Jima", "Fury", "Atonement", 
   "The Boy in the Striped Pajamas", "Come and See", "Paths of Glory", "The Bridge on the River Kwai", 
   "Glory"},
  
  // Indie
  {"Lady Bird", "Moonlight", "The Florida Project", "Frances Ha", "Little Miss Sunshine", 
   "The Farewell", "Juno", "The Lobster", "The Witch", "Lady Macbeth", 
   "The Babadook", "Eighth Grade", "The Last Black Man in San Francisco", "The Rider", 
   "Swiss Army Man", "The Art of Self-Defense", "The Peanut Butter Falcon", "The Lighthouse", 
   "A Ghost Story", "The Death of Dick Long"}
    };

    public MovieG() {
        setTitle("Movie Genie");
        setSize(800, 600); // Set a widescreen size
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setLayout(new BorderLayout());

        // Welcome message
        JLabel welcomeLabel = new JLabel("Welcome to Movie Genie!", SwingConstants.CENTER);
        welcomeLabel.setForeground(Color.WHITE);
        welcomeLabel.setFont(new Font("Sans-serif", Font.BOLD, 24)); // Set font
        add(welcomeLabel, BorderLayout.NORTH);

        // Create a panel for movie logos
        logoPanel = new JPanel();
        logoPanel.setLayout(new GridLayout(4, 3, 10, 10)); // 3 columns, with spacing

        // Add movie logo squares (JPanels) with genres
        for (int i = 0; i < genres.length; i++) {
            JPanel logoSquare = createLogoSquare(genres[i]);
            logoPanel.add(logoSquare);
        }

        // Add the logo panel to the center of the frame
        add(logoPanel, BorderLayout.CENTER);

        // Create button for random movie selection
        randomButton = createStyledButton("Choose Movie");
        randomButton.setToolTipText("Click to choose a random movie based on the selected genre");

        // Label for displaying results
        searchLabel = new JLabel();
        searchLabel.setForeground(Color.WHITE);
        searchLabel.setHorizontalAlignment(SwingConstants.CENTER);
        searchLabel.setFont(new Font("Sans-serif", Font.BOLD, 17)); // Set font
        searchLabel.setPreferredSize(new Dimension(300, 40));

        // Action listener for the random movie button
        randomButton.addActionListener(e -> {
            int genreIndex = (int) (Math.random() * genres.length); // Randomly select a genre index
            String movie = getRandomElement(moviesByGenre[genreIndex]);
            searchLabel.setText("Your movie is: " + movie);
        });

        // Create a panel for the bottom controls
        JPanel controlPanel = new JPanel();
        controlPanel.setLayout(new FlowLayout());
        controlPanel.add(randomButton);
        controlPanel.add(searchLabel);

        // Add control panel to the bottom of the frame
        add(controlPanel, BorderLayout.SOUTH);

        // Menu bar
        JMenuBar menuBar = new JMenuBar();
        JMenu fileMenu = new JMenu("File");
        JMenuItem exitItem = new JMenuItem("Exit");
        exitItem.addActionListener(e -> System.exit(0));
        fileMenu.add(exitItem);

        JMenu settingsMenu = new JMenu("Settings");
        JMenuItem toggleThemeItem = new JMenuItem("Toggle Light/Dark Mode");
        toggleThemeItem.addActionListener(e -> {
            isDarkMode = !isDarkMode; // Toggle the mode
            updateTheme(); // Update the theme
        });
        settingsMenu.add(toggleThemeItem);
        menuBar.add(fileMenu);
        menuBar.add(settingsMenu);
        setJMenuBar(menuBar);

        // Set the background color of the frame after all components are initialized
        updateTheme();

        setVisible(true); // Make the Movie Genie frame visible
    }

    private void updateTheme() {
        if (isDarkMode) {
            getContentPane().setBackground(new Color(10, 10, 30));
            searchLabel.setForeground(Color.BLACK);
        } else {
            getContentPane().setBackground(Color.BLACK);
            searchLabel.setForeground(Color.BLACK);
        }
        logoPanel.repaint(); // Refresh the logo panel
    }

    private JPanel createLogoSquare(String genre) {
        JPanel logoSquare = new JPanel();
        logoSquare.setPreferredSize(new Dimension(100, 100)); // Size of the logo square
        logoSquare.setBorder(BorderFactory.createLineBorder(Color.WHITE)); // Border for visibility

        // Set background color based on genre
        switch (genre) {
            case "Romance":
                logoSquare.setBackground(Color.RED);
                break;
            case "Action":
                logoSquare.setBackground(Color.BLUE);
                break;
            case "Horror":
                logoSquare.setBackground(Color.BLACK);
                break;
            case "Comedy":
                logoSquare.setBackground(Color.PINK);
                break;
            case "Drama":
                logoSquare.setBackground(new Color(128, 0, 128)); // Purple
                break;
            case "Thriller":
                logoSquare.setBackground(new Color(165, 42, 42)); // Brown
                break;
            case "Mystery":
                logoSquare.setBackground(Color.ORANGE);
                break;
            case "Science Fiction":
                logoSquare.setBackground(new Color(128, 0, 0)); // Maroon
                break;
            case "Documentary":
                logoSquare.setBackground(Color.GREEN);
                break;
            case "Western":
                logoSquare.setBackground(new Color(0, 128, 128)); // Teal
                break;
            case "War":
                logoSquare.setBackground(new Color(255, 215, 0)); // Golden
                break;
            case "Indie":
                logoSquare.setBackground(new Color(75, 0, 130)); // Indigo
                break;
        }

        // Add mouse listener to handle clicks
        logoSquare.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int genreIndex = java.util.Arrays.asList(genres).indexOf(genre);
                String movie = getRandomElement(moviesByGenre[genreIndex]);
                searchLabel.setText("Your movie is: " + movie);
            }
        });

        // Add genre label to the square
        JLabel genreLabel = new JLabel(genre, SwingConstants.CENTER);
        genreLabel.setForeground(Color.WHITE);
        genreLabel.setFont(new Font("Sans-serif", Font.BOLD, 14)); // Set font for genre label
        logoSquare.add(genreLabel);

        return logoSquare;
    }

    private JButton createStyledButton(String text) {
        JButton button = new JButton(text) {
            @Override
            protected void paintComponent(Graphics g) {
                if (getModel().isPressed()) {
                    g.setColor(new Color(50, 50, 150)); // Darker color when pressed
                } else if (getModel().isRollover()) {
                    g.setColor(new Color(70, 70, 200)); // Lighter color on hover
                } else {
                    g.setColor(isDarkMode ? new Color(100, 100, 255) : new Color(200, 200, 255)); // Default color
                }
                g.fillRoundRect(0, 0, getWidth(), getHeight(), 15, 15); // Rounded corners
                super.paintComponent(g);
            }
        };
        button.setForeground(Color.WHITE);
        button.setFont(new Font("Sans-serif", Font.BOLD, 17)); // Set font
        button.setBorder(BorderFactory.createLineBorder(Color.WHITE));
        button.setFocusPainted(false);
        button.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        button.setPreferredSize(new Dimension(140, 40));
        return button;
    }

    private String getRandomElement(String[] array) {
        Random random = new Random();
        return array[random.nextInt(array.length)];
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new MovieG().setVisible(true));
    }
}
